// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in = load, sel = address[12..13], a = inram0, b = inram1, c = inram2, d = inram3);
	
	RAM4K(in = in, load = inram0, address = address[0..11], out = outram0);
	RAM4K(in = in, load = inram1, address = address[0..11], out = outram1);
	RAM4K(in = in, load = inram2, address = address[0..11], out = outram2);
	RAM4K(in = in, load = inram3, address = address[0..11], out = outram3);
	
	Mux4Way16(a = outram0, b = outram1, c = outram2, d = outram3, sel = address[12..13], out = out);
}